datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  @@unique([provider, providerAccountId])
  user User @relation(fields:[userId], references:[id], onDelete: Cascade)
  }

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique@map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields:[userId], references:[id], onDelete: Cascade)
}


model User {
  id            String    @id @default(cuid())
  firstName  String?
  lastName   String?
  email      String?  @unique
  emailVerified DateTime?
  description String
  city       String?
  country    String
  accounts      Account[]
  sessions      Session[]
  familyId   Int
  family     Family  @relation(fields: [familyId], references: [id])
}


model Recipe {
  id         Int       @id @default(autoincrement())
  name       String
  description String
  ingredientList String[]
  instructions String[]
  imageURL    String
  public      Boolean  @default(false)

  familyId   Int
  family     Family  @relation(fields: [familyId], references: [id])
  categories Category[]
  ratings    Rating[]

}

model Family {
  id      Int      @id @default(autoincrement())

  people  User[]
  recipes Recipe[]

}

model Category {
  id    Int    @id @default(autoincrement())
  name  String

  recipes Recipe[]
}

model Rating {
  id      Int    @id @default(autoincrement())
  review  String
  stars   Int

  recipeId   Int
  recipe     Recipe  @relation(fields: [recipeId], references: [id])
}



model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  }
